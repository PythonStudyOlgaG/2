"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
...
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д.

"""


class Matrix:
    def __init__(self, my_list):
        self.my_list = my_list

    def __str__(self):
        return '\n'.join(map(str, self.my_list))

    def __add__(self, other):
        for row in range(len(self.my_list)):
            for column in range(len(other.my_list[row])):
                self.my_list[row][column] = round(self.my_list[row][column] + other.my_list[row][column], 2)
        return Matrix.__str__(self)


matrix_1 = Matrix([[35, 70], [49, 84], [79.1, 35], [175, 210]])
matrix_2 = Matrix([[10, 20], [14, 24], [22.6, 10], [50, 60]])
print(matrix_1.__add__(matrix_2))
